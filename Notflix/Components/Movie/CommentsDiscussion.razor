@using Core.Domain.DiscussionItems
@using Core.Domain.DiscussionItems.Models
@using Core.Domain.Authentication
@using Core.Data.Models
@inject IDiscussionItemService DiscussionItemService
@inject IAuthenticationService AuthenticationService
@inherits AuthBase

@code {

    [Parameter]
    public long MovieId { get; set; }


    private UserDao _user;
    private string NewComment { get; set; }
    private IEnumerable<CommentTreeViewModel> _comments;
    private bool HasMoreComments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _user = await AuthenticationService.GetCurrentUser(await GetAuthToken());
        var comments = await DiscussionItemService.GetComments(new GetCommentsRequest
        {
            DiscussableId = MovieId,
            ToDate = DateTime.Now,
            Token = await GetAuthToken(),
        });
        HasMoreComments = comments.HasMore;
        _comments = comments.Items.Select(CommentTreeViewModel.Map).OrderByDescending(c => c.Created).ToList();
    }

    private async Task MakeComment()
    {
        var comment = await DiscussionItemService.AddComment(new AddCommentRequest
        {
            DiscussableId = MovieId,
            Text = NewComment,
            Token = await GetAuthToken(),
        });
        _comments = _comments.Prepend(CommentTreeViewModel.Map(comment)).OrderByDescending(c => c.Created).ToList();
    }

}
@if (_user != null)
{
    <div class="discussion__commentSection d-flex" style="margin-bottom: 10px">
         <MudTextField  @bind-Value="NewComment" Label="@_user.Username" Placeholder="Post a new comment..."/>
         <MudButton Style="height: fit-content; margin-top: auto; border:1px solid #594ae2" OnClick="MakeComment">Post</MudButton>
    </div>
}

@foreach (var comment in _comments ?? new CommentTreeViewModel[0])
{
    <CommentItem Content="@comment"/>
}