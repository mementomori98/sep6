@using Notflix.Components.Movie

@code {

    [Parameter]
    public CommentDiscussion.Comment Content { get; set; }

    private string Comment { get; set; }
    private string _commentOpen = "";

    private void OnCommentPressed(MouseEventArgs mouseEvent)
    {
        _commentOpen = _commentOpen.Equals("") ? "discussion__main" : "";
    }
    
    private async Task Reply()
    { 
        //Execute reply procedure
        _commentOpen = "";
    }

}

<div class="comment-item">
    <div class="discussion d-flex">
        <img src="/Images/avatar.png" class="discussion__avatar" alt="user avatar"/>
        <div class="@_commentOpen" style="padding-left: 10px; width: 100%">
            <MudText Typo="Typo.body1">@Content.Name</MudText>
            <MudText Typo="Typo.body2">@Content.Contents</MudText>
            <div class="d-flex" style="font-size: 18px;">
                <div class="discussion__icon" id="discussion__voteUp">
                    <p>&#129145;</p>
                </div>
                <p class="discussion__iconText" style="margin-left: 5px">12k</p>
                <div class="discussion__icon" id="discussion__voteDown" style="margin-left: 5px">
                    <p>&#129147;</p>
                </div>
                <div @onmouseup="@OnCommentPressed" class="discussion__icon" id="discussion__commentAct" style="margin-left: 5px">
                    <p>&#128490; </p>
                    <p class="discussion__iconText" style="padding-left: 3px">Reply</p>
                </div>
            </div>
            @if (_commentOpen.Equals("discussion__main"))
            {
                <div class="discussion__commentSection d-flex">
                    <MudTextField Class="discussion__comment" @bind-Value="Comment" Label="Comment as **name**" Placeholder="Comment..."/>
                    <MudButton Style="height: fit-content; margin-top: auto; border:1px solid #594ae2" OnClick="Reply">Reply</MudButton>
                </div>
            }
        </div>
    </div>

    @if (Content.Children != null && Content.Children.Any())
    {
        <div class="comment-item-children">
            @foreach (var child in Content.Children)
            {
                <CommentItem Content="@child"></CommentItem>
            }
        </div>
    }


</div>