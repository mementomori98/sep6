@using Notflix.Utils
@using Core.Domain.Authentication
@using Core.Domain.Authentication.Models
@using Notflix.Components.Accounts
@inherits LayoutComponentBase
@inject IDialogService DialogService

@code {

    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Inject]
    IAuthenticationService AuthenticationService { get; set; }

    [Inject]
    LocalStorage LocalStorage { get; set; }

    private AuthToken Token { get; set; }
    private bool IsLoggedIn { get; set; }

    MudTheme Theme = new MudTheme
    {
        Palette = new Palette
        {
        }
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var initIsLoggedIn = IsLoggedIn;
        Token = await LocalStorage.Get<AuthToken>("authToken");
        IsLoggedIn = await AuthenticationService.IsLoggedIn(Token);
        if (initIsLoggedIn != IsLoggedIn)
            StateHasChanged();
    }

    private async Task Logout()
    {
        if (IsLoggedIn)
        {
            await AuthenticationService.Logout(Token);
            await LocalStorage.Remove("authToken");
            StateHasChanged();
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task Login()
    {
        var parameters = new DialogParameters();
        parameters.Add("SuccessCallback", new Action(() => NavigationManager.NavigateTo(NavigationManager.Uri, true)));
        DialogService.Show<LoginDialog>("Sign in", parameters);
    }

    private async Task Signup()
    {
        var parameters = new DialogParameters();
        parameters.Add("SuccessCallback", new Action(StateHasChanged));
        DialogService.Show<SignupDialog>("Sign up", parameters);
    }

}

<MudThemeProvider/>
<MudDialogProvider
    FullWidth="true"
    MaxWidth="MaxWidth.ExtraSmall"
    Position="DialogPosition.Center"/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="4">
        <MudAppBarSpacer/>
        <MovieSearch/>
        <MudAppBarSpacer/>
        @if (IsLoggedIn)
        {
            <MudMenu Icon="@(Icons.Filled.Person)" Direction="Direction.Left" OffsetX="true">
                <MudMenuItem OnClick="Logout">Log out</MudMenuItem>
            </MudMenu>
        }
        else
        {
            <MudButton OnClick="Login" Variant="Variant.Outlined" Class="mr-4 mud-theme-primary lighten normal">Sign in</MudButton>
            <MudButton OnClick="Signup" Variant="Variant.Outlined" Class="mud-theme-primary lighten normal">Sign up</MudButton>
        }

    </MudAppBar>
    <MudDrawer Open="true" ClipMode="DrawerClipMode.Always" Elevation="4">
        <MudNavMenu>
            <MudText Typo="Typo.h6" Class="pa-3">Notflix</MudText>
            <MudDivider Class="mb-3"/>
            <MudNavLink Href="/" Icon="@(Icons.Outlined.Home)" Match="NavLinkMatch.All">Home</MudNavLink>
            <MudNavLink Href="/Mate" Icon="@(Icons.Outlined.Brush)">Mate Test Page</MudNavLink>
            <MudNavLink Href="/TopLists" Icon="@(Icons.Outlined.Brush)">My TopLists</MudNavLink>
            <MudNavLink Href="/Main" Icon="@(Icons.Outlined.Brush)">Main</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>