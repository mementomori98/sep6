@page "/Main/{id}"
@using Core.Domain.Movies
@using Core.Domain.Movies.Models
@using Microsoft.JSInterop
@inject IJSRuntime JS
@inject IMovieService MovieService

@if (_movieModel != null)
{
    <Card>
        <figure class="movieFigure">
            <img class="movieFigure__clip" src="@(_movieModel.ImageUrl)"/>
        </figure>
        <MudGrid>
            <MudItem sm="8" lg="8">
                <MudText Typo="Typo.body2">@_movieModel.Plot</MudText>
            </MudItem>
            <MudItem sm="4" lg="4" Class="white">
                <MudRating ReadOnly="true" Size="Size.Medium" SelectedValue="GetRating(_movieModel)"/>
                <MudText Typo="Typo.body2">Genre: @_movieModel.Genres.First()</MudText>
                <MudText Typo="Typo.body2">Actors: @string.Join(",", _movieModel.Actors)</MudText>

            </MudItem>
        </MudGrid>

        @if (_rendered)
        {
            <MudTabs Elevation="1" Rounded="true" PanelClass="pa-6">
                <MudTabPanel Text="Comments" ToolTip="ToolTip One">
                    <MudText>Comments Section</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Reviews" ToolTip="ToolTip Two">
                    <MudText>Reviews section</MudText>
                </MudTabPanel>
                <MudTabPanel Text="Fun Facts" ToolTip="ToolTip Three">
                    <MudText>Fun facts section</MudText>
                </MudTabPanel>
            </MudTabs>
        }
    </Card>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private MovieModel _movieModel;

    protected override async Task OnParametersSetAsync()
    {
        _movieModel = await MovieService.GetMovieDetails(Id);
    }


    private int GetRating(MovieModel movieModel)
    {
        var value = movieModel.Ratings.First().Value;
        var rating = value.Substring(0, value.IndexOf("/", StringComparison.Ordinal)).Trim();
        return (int) Math.Round(float.Parse(rating) / 2);
    }

    private bool _rendered;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _rendered = true;
    }

}